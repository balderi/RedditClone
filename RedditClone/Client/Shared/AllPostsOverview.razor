@inject IPostService PostService

@if (_posts == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <h3 class="ms-3">Loading...</h3>
    </div>
}
else if (!_posts.Any())
{
    <p>There's nothing here :(</p>
}
else
{
    int i = 1;
    foreach(var p in _posts)
    {
        <PostElement Post="p" Number="i++" ShowBoardName="true" />
    }
}

@code {
    List<Post>? _posts;

    protected override async Task OnInitializedAsync()
    {
        var posts = await PostService.GetPostsAsync();

        if(posts == null || !posts.Success || posts.Data == null)
        {
            _posts = new();
            return;
        }

        _posts = posts.Data.OrderByDescending(p => p.FuzzyPoints).Take(10).ToList();
    }
}
