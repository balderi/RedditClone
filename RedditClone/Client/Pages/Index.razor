@inject IBoardService BoardService
@inject NavigationManager NavMan

@page "/"

<PageTitle>Index</PageTitle>

@if(_boards == null)
{
    if(string.IsNullOrEmpty(_message))
    {
        <p>Loading...</p>
    }
    else
    {
        <p>@_message</p>
    }
}
else
{
    @foreach(var b in _boards)
    {
        <p><a href="/b/@b.Name">@b.Name</a></p>
    }
}

<AuthorizeView>
    <Authorized>
        <button class="my-3 btn btn-primary" @onclick="OnNewBoard">@_buttonText</button>
        @if (_newBoard)
        {
            <AddBoardElement />
        }
    </Authorized>
    <NotAuthorized>
        <p>Please <a href="/login?returnurl=@NavMan.Uri">log in</a> or <a href="/register">register</a> to add a board.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    List<Board> _boards;
    string _message = string.Empty;
    bool _newBoard = false;
    string _buttonText = "New board";

    protected override async Task OnParametersSetAsync()
    {
        var getBoards = await BoardService.GetBoardsAsync();
        if(getBoards != null)
        {
            if (getBoards.Success && getBoards.Data != null)
            {
                _boards = getBoards.Data;
            }
            else
            {
                _message = getBoards.Message;
            }
        }
        else
        {
            _message = "API call failed.";
        }
    }

    void OnNewBoard()
    {
        _newBoard = !_newBoard;
        _buttonText = _newBoard ? "Cancel" : "New board";
    }
}